name: Release APK

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  build_release:
    runs-on: ubuntu-latest

    outputs:
      versionName: ${{ steps.versionname.outputs.versionName }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get versionName
        id: versionname
        run: |
          VERSION=$(grep 'versionName' app/build.gradle.kts | head -1 | awk -F\" '{ print $2 }')
          if [ -z "$VERSION" ]; then
            echo "Error: versionName not found in app/build.gradle.kts" >&2
            exit 1
          fi
          echo "versionName=$VERSION" >> $GITHUB_OUTPUT

      - name: Print versionName
        run: echo "Version Name is ${{ steps.versionname.outputs.versionName }}"

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make Gradle Executable
        run: chmod +x ./gradlew

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'release_key.jks'
          fileDir: 'app/'
          encodedString: ${{ secrets.SIGNING_KEY }}

      - name: Build APK
        run: ./gradlew assembleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release APK
          path: app/build/outputs/apk/release/*.apk

  release:
    needs: build_release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create and Push Tag
        run: |
          git tag -a ${{ needs.build_release.outputs.versionName }} -m "Release ${{ needs.build_release.outputs.versionName }}"
          git push origin ${{ needs.build_release.outputs.versionName }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: Release APK
          path: app/build/outputs/apk/release/

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.build_release.outputs.versionName }}
          artifacts: "app/build/outputs/apk/release/*.apk"
          generateReleaseNotes: true
